// Generated by CoffeeScript 1.7.1
(function() {
  var Recording;

  Recording = (function() {
    function Recording(element, audio) {
      this.element = element;
      this.audio = audio != null ? audio : null;
      if (this.audio != null) {
        this.showCropper();
      } else {
        this.showStartButton();
      }
    }

    Recording.prototype.beginRecording = function(button) {
      var r;
      button.disabled = true;
      r = new window.WAVRecorder();
      r.onError = (function(_this) {
        return function(err) {
          return _this.showError(err);
        };
      })(this);
      r.onDone = (function(_this) {
        return function() {
          _this.audio = r.getWAV();
          return _this.showCropper();
        };
      })(this);
      r.onStart = (function(_this) {
        return function() {
          _this.element.innerHTML = '';
          button = document.createElement('button');
          button.innerHTML = 'End recording';
          button.addEventListener('click', function() {
            return r.stop();
          });
          return _this.element.appendChild(button);
        };
      })(this);
      return r.start();
    };

    Recording.prototype.showCropper = function() {
      this.element.innerHTML = '';
      return console.log('data is', this.audio.base64());
    };

    Recording.prototype.showError = function(err) {
      var button;
      this.element.innerHTML = 'Error: ' + err + '&nbsp;&nbsp;';
      button = document.createElement('button');
      button.innerHTML = 'Dismiss';
      button.addEventListener('click', (function(_this) {
        return function() {
          return _this.showStartButton();
        };
      })(this));
      return this.element.appendChild(button);
    };

    Recording.prototype.showStartButton = function() {
      var button;
      this.element.innerHTML = '';
      button = document.createElement('button');
      button.innerHTML = 'Start recording';
      button.addEventListener('click', (function(_this) {
        return function() {
          return _this.beginRecording(button);
        };
      })(this));
      return this.element.appendChild(button);
    };

    return Recording;

  })();

  window.Recording = Recording;

}).call(this);
